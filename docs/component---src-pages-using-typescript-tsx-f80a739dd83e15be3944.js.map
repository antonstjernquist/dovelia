{"version":3,"sources":["webpack:///./src/pages/using-typescript.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/footer.tsx","webpack:///./src/components/layout.tsx"],"names":["UsingTypescript","data","path","title","site","buildTime","href","to","query","Container","styled","header","Header","siteTitle","footer","Footer","Layout","children","useStaticQuery","siteMetadata"],"mappings":"6FAAA,0GAyBeA,UAZyC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACtD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,qBACX,sEACA,uEAA4C,wCAA5C,+DAAyH,2CAAzH,wEACA,uEAA4C,0CAA5C,oBAAgF,0CAAhF,gBAAgH,yCAAhH,UACA,6DAAkCD,EAAlC,wBAA6DD,EAAKG,KAAKC,UAAvE,KACA,8DAAmC,uBAAGC,KAAK,6CAAR,kCAAnC,KACA,kBAAC,OAAD,CAAMC,GAAG,KAAT,6BAMG,IAAMC,EAAQ,c,iGCvBfC,EAAYC,IAAOC,OAAV,oEAAGD,CAAH,0DAmBAE,EATA,SAAC,GAAyB,IAAvBC,EAAuB,EAAvBA,UAChB,OACE,kBAACJ,EAAD,KACE,kBAAC,IAAD,MACA,8BAAOI,KCfPJ,EAAYC,IAAOI,OAAV,oEAAGJ,CAAH,6EAeAK,EARA,WACb,OACE,kBAAC,EAAD,KACE,0CC2BSC,IA1BA,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SACVhB,EAAOiB,yBAAe,cAU5B,OACE,oCACE,kBAAC,EAAD,CAAQL,UAAWZ,EAAKG,KAAKe,aAAahB,QAC1C,6BACE,8BAAOc,IAET,kBAAC,EAAD","file":"component---src-pages-using-typescript-tsx-f80a739dd83e15be3944.js","sourcesContent":["// If you don't want to use TypeScript you can delete this file!\r\nimport React from \"react\"\r\nimport { PageProps, Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\r\n  <Layout>\r\n    <SEO title=\"Using TypeScript\" />\r\n    <h1>Gatsby supports TypeScript by default!</h1>\r\n    <p>This means that you can create and write <em>.ts/.tsx</em> files for your pages, components etc. Please note that the <em>gatsby-*.js</em> files (like gatsby-node.js) currently don't support TypeScript yet.</p>\r\n    <p>For type checking you'll want to install <em>typescript</em> via npm and run <em>tsc --init</em> to create a <em>.tsconfig</em> file.</p>\r\n    <p>You're currently on the page \"{path}\" which was built on {data.site.buildTime}.</p>\r\n    <p>To learn more, head over to our <a href=\"https://www.gatsbyjs.org/docs/typescript/\">documentation about TypeScript</a>.</p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport GlobalStyle from \"./global\"\n\nconst Container = styled.header`\n  padding: 1rem;\n  background-color: #232323;\n  color: #fafafa;\n`\n\ninterface Props {\n  siteTitle: string\n}\n\nconst Header = ({ siteTitle }: Props) => {\n  return (\n    <Container>\n      <GlobalStyle />\n      <span>{siteTitle}</span>\n    </Container>\n  )\n}\n\nexport default Header\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Container = styled.footer`\n  padding: 2rem;\n  margin-bottom: 1rem;\n  background-color: #232323;\n  color: #fafafa;\n`\n\nconst Footer = () => {\n  return (\n    <Container>\n      <span>Footer</span>\n    </Container>\n  )\n}\n\nexport default Footer\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport Footer from \"./footer\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <div>\r\n        <main>{children}</main>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}